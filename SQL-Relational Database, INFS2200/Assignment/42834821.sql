TASK0
@C:\prjScript.sql.txt

--1A
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME='EMP' OR TABLE_NAME='DEPT' OR TABLE_NAME='PURCHASE' OR TABLE_NAME='CLIENT';

--1B
ALTER TABLE DEPT ADD CONSTRAINT UN_DNAME UNIQUE (DNAME);
ALTER TABLE PURCHASE MODIFY AMOUNT NUMBER (4) NOT NULL;
ALTER TABLE EMP MODIFY ENAME VARCHAR2 (20) NOT NULL;
ALTER TABLE DEPT MODIFY DNAME VARCHAR2 (20) NOT NULL;
ALTER TABLE CLIENT MODIFY CNAME VARCHAR2 (20) NOT NULL;
ALTER TABLE PURCHASE MODIFY RECEIPTNO NUMBER (6) NOT NULL;
ALTER TABLE PURCHASE ADD CONSTRAINT CK_SERVICETYPE CHECK (SERVICETYPE = 'Training' OR SERVICETYPE = 'Data Recovery' OR SERVICETYPE = 'Consultation' OR SERVICETYPE = 'Software Installation' OR SERVICETYPE = 'Software Repair');
ALTER TABLE PURCHASE ADD CONSTRAINT CK_PAYMENTTYPE CHECK (PAYMENTTYPE = 'Debit' OR PAYMENTTYPE = 'Cash' OR PAYMENTTYPE = 'Credit');
ALTER TABLE PURCHASE ADD CONSTRAINT CK_GST CHECK (GST = 'Yes' OR GST = 'No');
ALTER TABLE EMP ADD CONSTRAINT FK_DEPTNO FOREIGN KEY (DEPTNO) REFERENCES DEPT (DEPTNO);
ALTER TABLE PURCHASE ADD CONSTRAINT FK_EMPNO FOREIGN KEY (SERVEDBY) REFERENCES EMP (EMPNO);
ALTER TABLE PURCHASE ADD CONSTRAINT FK_CLIENTNO FOREIGN KEY (CLIENTNO) REFERENCES CLIENT (CLIENTNO);
	
--2A
SELECT CNUMBER, CLIENT.CNAME, SAMT AS TOTAL_PURCHASE
FROM(	
	SELECT PURCHASE.CLIENTNO AS CNUMBER, SUM(PURCHASE.AMOUNT) AS SAMT
	FROM PURCHASE
	GROUP BY PURCHASE.CLIENTNO
	ORDER BY SAMT DESC), CLIENT
WHERE ROWNUM=1 AND CLIENT.CLIENTNO=CNUMBER;

--2B
CREATE OR REPLACE TRIGGER DISCOUNT_TOP_CLIENT
BEFORE INSERT ON PURCHASE 
FOR EACH ROW
DECLARE
NEWAMT NUMBER:=:NEW.AMOUNT*0.85;
TC NUMBER:=24535;
begin
	IF :NEW.CLIENTNO=TC THEN
		IF INSERTING THEN
			:NEW.AMOUNT :=NEWAMT;
		END IF;
	END IF;
END DISCOUNT_TOP_CLIENT; 
/

--2C
CREATE OR REPLACE TRIGGER DISCOUNT_SUN
BEFORE INSERT ON PURCHASE 
FOR EACH ROW
DECLARE
DN NUMBER(2);
BEGIN
	SELECT DEPTNO INTO DN FROM EMP WHERE EMPNO=:NEW.SERVEDBY;
	IF (DN=20) THEN
		IF INSERTING THEN
			:NEW.PAYMENTTYPE:='Cash';
			IF (:NEW.SERVICETYPE='Data Recovery') THEN
				:NEW.AMOUNT:=:NEW.AMOUNT*0.7;
			END IF;
		END IF;
	END IF;
END DISCOUNT_SUN; 
/


--3A
CREATE VIEW V_DEPT_AMOUNT AS
SELECT DEPT.DEPTNO AS NUM,DEPT.DNAME AS NAME, MAX(PURCHASE.AMOUNT) AS MAXIUM, MIN(PURCHASE.AMOUNT) AS MINIUM, AVG(PURCHASE.AMOUNT)AS AVERAGE,SUM(PURCHASE.AMOUNT) AS TOTAL
FROM DEPT, EMP, PURCHASE
WHERE PURCHASE.SERVEDBY=EMP.EMPNO AND DEPT.DEPTNO=EMP.DEPTNO
GROUP BY DEPT.DEPTNO,DEPT.DNAME;

--3B
CREATE MATERIALIZED VIEW MV_DEPT_AMOUNT 
BUILD IMMEDIATE AS
SELECT DEPT.DEPTNO AS NUM,DEPT.DNAME AS NAME, MAX(PURCHASE.AMOUNT) AS MAXIUM, MIN(PURCHASE.AMOUNT) AS MINIUM, AVG(PURCHASE.AMOUNT)AS AVERAGE,SUM(PURCHASE.AMOUNT) AS TOTAL
FROM DEPT, EMP, PURCHASE
WHERE PURCHASE.SERVEDBY=EMP.EMPNO AND DEPT.DEPTNO=EMP.DEPTNO
GROUP BY DEPT.DEPTNO,DEPT.DNAME;

--3D
CREATE VIEW V_DEPT_TOP_EMPS AS
SELECT * FROM(
	SELECT DEPT.DNAME,DEPT.DEPTNO AS DNO,EMP.EMPNO AS ENUM, EMP.ENAME AS ENAME, MAX(PURCHASE.AMOUNT) AS MAXIUM, AVG(PURCHASE.AMOUNT)AS AVERAGE,SUM(PURCHASE.AMOUNT) AS TOTAL, COUNT(*) AS CNT
	FROM EMP, PURCHASE,DEPT
	WHERE PURCHASE.SERVEDBY=EMP.EMPNO AND DEPT.DEPTNO=EMP.DEPTNO
	GROUP BY EMP.EMPNO,EMP.ENAME,DEPT.DEPTNO,DEPT.DNAME) T
WHERE(
	SELECT COUNT (*)
	FROM(
		SELECT DEPT.DNAME,DEPT.DEPTNO AS DNO,EMP.EMPNO AS ENUM, EMP.ENAME AS ENAME, MAX(PURCHASE.AMOUNT) AS MAXIUM, AVG(PURCHASE.AMOUNT)AS AVERAGE,SUM(PURCHASE.AMOUNT) AS TOTAL
		FROM EMP, PURCHASE,DEPT
		WHERE PURCHASE.SERVEDBY=EMP.EMPNO AND DEPT.DEPTNO=EMP.DEPTNO
		GROUP BY EMP.EMPNO,EMP.ENAME,DEPT.DEPTNO,DEPT.DNAME)
	WHERE DNO=T.DNO AND TOTAL>=T.TOTAL
	)<=10
ORDER BY DNO ASC,TOTAL DESC;

CREATE MATERIALIZED VIEW MV_DEPT_TOP_EMPS 
BUILD IMMEDIATE AS
SELECT * FROM(
	SELECT DEPT.DNAME,DEPT.DEPTNO AS DNO,EMP.EMPNO AS ENUM, EMP.ENAME AS ENAME, MAX(PURCHASE.AMOUNT) AS MAXIUM, AVG(PURCHASE.AMOUNT)AS AVERAGE,SUM(PURCHASE.AMOUNT) AS TOTAL, COUNT(*) AS CNT
	FROM EMP, PURCHASE,DEPT
	WHERE PURCHASE.SERVEDBY=EMP.EMPNO AND DEPT.DEPTNO=EMP.DEPTNO
	GROUP BY EMP.EMPNO,EMP.ENAME,DEPT.DEPTNO,DEPT.DNAME) T
WHERE(
	SELECT COUNT (*)
	FROM(
		SELECT DEPT.DNAME,DEPT.DEPTNO AS DNO,EMP.EMPNO AS ENUM, EMP.ENAME AS ENAME, MAX(PURCHASE.AMOUNT) AS MAXIUM, AVG(PURCHASE.AMOUNT)AS AVERAGE,SUM(PURCHASE.AMOUNT) AS TOTAL
		FROM EMP, PURCHASE,DEPT
		WHERE PURCHASE.SERVEDBY=EMP.EMPNO AND DEPT.DEPTNO=EMP.DEPTNO
		GROUP BY EMP.EMPNO,EMP.ENAME,DEPT.DEPTNO,DEPT.DNAME)
	WHERE DNO=T.DNO AND TOTAL>=T.TOTAL
	)<=10
ORDER BY DNO ASC,TOTAL DESC;

--4A
SELECT COUNT(*) 
FROM (SELECT COUNT(SUBSTR(RECEIPTNO,0,3)) AS COUNT_NUM 
FROM PURCHASE GROUP BY SUBSTR(RECEIPTNO,0,3) 
HAVING COUNT(SUBSTR(RECEIPTNO,0,3)) >= 10 
ORDER BY COUNT(SUBSTR(RECEIPTNO,0,3)));
	
--4B
CREATE INDEX BOOK_RECEIPT ON PURCHASE(SUBSTR(RECEIPTNO,1,3));

--4C 
SELECT SUM(AMOUNT) FROM PURCHASE,EMP
WHERE PURCHASE.SERVEDBY=EMP.EMPNO AND INSTR(PURCHASE.SERVICETYPE, 'Software')=0 AND EMP.DEPTNO=50;

--4D
CREATE INDEX D4 ON PURCHASE(INSTR(SERVICETYPE, 'Software'));

--5A
SELECT SERVICETYPE, PAYMENTTYPE,GST, COUNT(*)
FROM PURCHASE
GROUP BY SERVICETYPE,PAYMENTTYPE,GST
HAVING COUNT(*)>1000; 

--6A
EXPLAIN PLAN FOR
SELECT * FROM PURCHASE WHERE PURCHASENO=9989;
SELECT PLAN_TABLE_OUTPUT FROM TABLE(DBMS_XPLAN.DISPLAY);